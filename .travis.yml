language: java

branches:
  only:
    - master
    - develop

env:
  global:
    - HELM_URL=https://get.helm.sh
    - HELM_TGZ=helm-v3.2.0-rc.1-linux-amd64.tar.gz

addons:
  ssh_known_hosts: smithlu7@129.194.69.131
  sonarcloud:
    organization: pinfo-2020

before_install:
  # Install helm
  - wget ${HELM_URL}/${HELM_TGZ}
  - tar xzfv ${HELM_TGZ}
  - PATH=`pwd`/linux-amd64/:$PATH
  # Unencrypt ssh-key for VM
  - cd $TRAVIS_BUILD_DIR
  - openssl aes-256-cbc -K $encrypted_ba497ca00145_key -iv $encrypted_ba497ca00145_iv -in pinfo4_deploy_rsa.enc -out /tmp/pinfo4_deploy_rsa -d
  - eval "$(ssh-agent -s)" # 'eval' to load the ssh-agent variables into the current environment upon starting of the ssh-agent, which we will use for logging in to the VM
  - chmod 600 /tmp/pinfo4_deploy_rsa
  - ssh-add /tmp/pinfo4_deploy_rsa

script:
  # Tests
  # - mvn install
  # Static analysis
  - mvn sonar:sonar -Dsonar.projectKey=PInfo-2020_PInfo-4 -Dsonar.organization=pinfo-2020 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=dcc92ae7dc64eccb859dcb446883d405a94733bd -Dsonar.projectName=Kernel_pinfo4
  # Build helm package
  - cd $TRAVIS_BUILD_DIR
  - mkdir files-to-gh-pages
  - helm package helm-charts/microservices -d files-to-gh-pages
  - cd files-to-gh-pages
  - helm repo index .

deploy:
    # Push to gh-pages branch
    - provider: pages
      skip_cleanup: true
      github_token: $GITHUB_TOKEN
      local_dir: files-to-gh-pages
      target_branch: gh-pages
      verbose: true
      keep_history: true
      on:
        branch: master
    # Run deployment script on vm
    - provider: script
      skip_cleanup: true
      script: cd $TRAVIS_BUILD_DIR; ssh smithlu7@129.194.69.131 'bash ' < ./scripts/deploy_vm.sh
      on:
        branch: master
